{"version":3,"sources":["src/disableButtons.js","src/flatten.js","node_modules/micromodal/dist/micromodal.min.js","src/obj/chest_defined.js","src/obj/chest_random.js","src/gameEnigne.js","game.js"],"names":["disableButtons","elements","forEach","el","disabled","flatten","array","reduce","acc","Array","isArray","element","push","Chests","table","size","len","slice","length","px","py","ctx","chestDiamond","chestEmpty","x","width","y","height","isDraw","isClick","clearRect","isGold","drawImage","arr","i","rnd","Math","random","xMin","xMax","yMin","yMax","num","Number","temp_arr","j","drawTable","strokeStyle","lineWidth","strokeRect","setImg","src","img","Image","drawCanvas","cnvId","fn","gameMode","canvas","document","createElement","setAttribute","querySelector","appendChild","getContext","Entry","C_def","C_rnd","ArrayOfChests","arrayChests","shuffle","a","floor","drawChests","iter","notClick","arrayDrawen","arrayNotDrawen","e","elems","e1","concat","clickChest","ev","cnv","ob","score","pageX","offsetLeft","pageY","offsetTop","filter","innerHTML","gameEnd","every","gameWin","clearChest","modal","text","init","show","addEventListener","location","reload","game","finish","gameFunctions","chest","arrayOfImages","onload","click","setTimeout","once","main","compl","querySelectorAll","mode","checked","tbl","dataset"],"mappings":"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","file":"game.map","sourceRoot":"..","sourcesContent":["const disableButtons = (elements) => {\r\n    elements.forEach((el) => {\r\n        el.disabled = true;\r\n    });\r\n};\r\n\r\nexport default disableButtons;","const flatten = (array) => array.reduce((acc, el) => {\r\n    if (Array.isArray(el)){\r\n        flatten(el).forEach(element => {\r\n            acc.push(element);\r\n        });\r\n        return acc;\r\n    }\r\n    return [...acc, el];\r\n},[]);\r\n\r\nexport default flatten;","!function(e,o){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=o():\"function\"==typeof define&&define.amd?define(o):e.MicroModal=o()}(this,function(){\"use strict\"\nvar e=function(e,o){if(!(e instanceof o))throw new TypeError(\"Cannot call a class as a function\")},o=function(){function e(e,o){for(var t=0;t<o.length;t++){var i=o[t]\ni.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(o,t,i){return t&&e(o.prototype,t),i&&e(o,i),o}}(),t=function(e){if(Array.isArray(e)){for(var o=0,t=Array(e.length);o<e.length;o++)t[o]=e[o]\nreturn t}return Array.from(e)}\nreturn function(){var i=[\"a[href]\",\"area[href]\",'input:not([disabled]):not([type=\"hidden\"]):not([aria-hidden])',\"select:not([disabled]):not([aria-hidden])\",\"textarea:not([disabled]):not([aria-hidden])\",\"button:not([disabled]):not([aria-hidden])\",\"iframe\",\"object\",\"embed\",\"[contenteditable]\",'[tabindex]:not([tabindex^=\"-\"])'],n=function(){function n(o){var i=o.targetModal,a=o.triggers,r=void 0===a?[]:a,s=o.onShow,l=void 0===s?function(){}:s,c=o.onClose,d=void 0===c?function(){}:c,u=o.openTrigger,f=void 0===u?\"data-micromodal-trigger\":u,h=o.closeTrigger,v=void 0===h?\"data-micromodal-close\":h,g=o.disableScroll,m=void 0!==g&&g,b=o.disableFocus,y=void 0!==b&&b,w=o.awaitCloseAnimation,k=void 0!==w&&w,p=o.debugMode,E=void 0!==p&&p\ne(this,n),this.modal=document.getElementById(i),this.config={debugMode:E,disableScroll:m,openTrigger:f,closeTrigger:v,onShow:l,onClose:d,awaitCloseAnimation:k,disableFocus:y},r.length>0&&this.registerTriggers.apply(this,t(r)),this.onClick=this.onClick.bind(this),this.onKeydown=this.onKeydown.bind(this)}return o(n,[{key:\"registerTriggers\",value:function(){for(var e=this,o=arguments.length,t=Array(o),i=0;i<o;i++)t[i]=arguments[i]\nt.forEach(function(o){o.addEventListener(\"click\",function(){return e.showModal()})})}},{key:\"showModal\",value:function(){this.activeElement=document.activeElement,this.modal.setAttribute(\"aria-hidden\",\"false\"),this.modal.classList.add(\"is-open\"),this.setFocusToFirstNode(),this.scrollBehaviour(\"disable\"),this.addEventListeners(),this.config.onShow(this.modal)}},{key:\"closeModal\",value:function(){var e=this.modal\nthis.modal.setAttribute(\"aria-hidden\",\"true\"),this.removeEventListeners(),this.scrollBehaviour(\"enable\"),this.activeElement.focus(),this.config.onClose(this.modal),this.config.awaitCloseAnimation?this.modal.addEventListener(\"animationend\",function o(){e.classList.remove(\"is-open\"),e.removeEventListener(\"animationend\",o,!1)},!1):e.classList.remove(\"is-open\")}},{key:\"scrollBehaviour\",value:function(e){if(this.config.disableScroll){var o=document.querySelector(\"body\")\nswitch(e){case\"enable\":Object.assign(o.style,{overflow:\"initial\",height:\"initial\"})\nbreak\ncase\"disable\":Object.assign(o.style,{overflow:\"hidden\",height:\"100vh\"})}}}},{key:\"addEventListeners\",value:function(){this.modal.addEventListener(\"touchstart\",this.onClick),this.modal.addEventListener(\"click\",this.onClick),document.addEventListener(\"keydown\",this.onKeydown)}},{key:\"removeEventListeners\",value:function(){this.modal.removeEventListener(\"touchstart\",this.onClick),this.modal.removeEventListener(\"click\",this.onClick),document.removeEventListener(\"keydown\",this.onKeydown)}},{key:\"onClick\",value:function(e){e.target.hasAttribute(this.config.closeTrigger)&&(this.closeModal(),e.preventDefault())}},{key:\"onKeydown\",value:function(e){27===e.keyCode&&this.closeModal(e),9===e.keyCode&&this.maintainFocus(e)}},{key:\"getFocusableNodes\",value:function(){var e=this.modal.querySelectorAll(i)\nreturn Object.keys(e).map(function(o){return e[o]})}},{key:\"setFocusToFirstNode\",value:function(){if(!this.config.disableFocus){var e=this.getFocusableNodes()\ne.length&&e[0].focus()}}},{key:\"maintainFocus\",value:function(e){var o=this.getFocusableNodes()\nif(this.modal.contains(document.activeElement)){var t=o.indexOf(document.activeElement)\ne.shiftKey&&0===t&&(o[o.length-1].focus(),e.preventDefault()),e.shiftKey||t!==o.length-1||(o[0].focus(),e.preventDefault())}else o[0].focus()}}]),n}(),a=null,r=function(e,o){var t=[]\nreturn e.forEach(function(e){var i=e.attributes[o].value\nvoid 0===t[i]&&(t[i]=[]),t[i].push(e)}),t},s=function(e){if(!document.getElementById(e))return console.warn(\"MicroModal v0.3.1: ❗Seems like you have missed %c'\"+e+\"'\",\"background-color: #f8f9fa;color: #50596c;font-weight: bold;\",\"ID somewhere in your code. Refer example below to resolve it.\"),console.warn(\"%cExample:\",\"background-color: #f8f9fa;color: #50596c;font-weight: bold;\",'<div class=\"modal\" id=\"'+e+'\"></div>'),!1},l=function(e){if(e.length<=0)return console.warn(\"MicroModal v0.3.1: ❗Please specify at least one %c'micromodal-trigger'\",\"background-color: #f8f9fa;color: #50596c;font-weight: bold;\",\"data attribute.\"),console.warn(\"%cExample:\",\"background-color: #f8f9fa;color: #50596c;font-weight: bold;\",'<a href=\"#\" data-micromodal-trigger=\"my-modal\"></a>'),!1},c=function(e,o){if(l(e),!o)return!0\nfor(var t in o)s(t)\nreturn!0}\nreturn{init:function(e){var o=Object.assign({},{openTrigger:\"data-micromodal-trigger\"},e),i=[].concat(t(document.querySelectorAll(\"[\"+o.openTrigger+\"]\"))),a=r(i,o.openTrigger)\nif(!0!==o.debugMode||!1!==c(i,a))for(var s in a){var l=a[s]\no.targetModal=s,o.triggers=[].concat(t(l)),new n(o)}},show:function(e,o){var t=o||{}\nt.targetModal=e,!0===t.debugMode&&!1===s(e)||(a=new n(t),a.showModal())},close:function(){a.closeModal()}}}()})\n","export class Chests{\r\n    constructor(table, size){\r\n        this.len = table.slice().length;\r\n        this.table = table.slice();\r\n        this.size = size;\r\n    }\r\n\r\n    get arrayChests(){\r\n        const table = this.table;\r\n        const size = this.size;\r\n        const arr = new Array();\r\n\r\n        for(let i = 0; i < this.len; i++) {\r\n            const rnd = Math.random() * 100;\r\n            const el = table[i];\r\n            arr.push({ x: el.x, y: el.y, isClick: false, height: size, width: size, isGold: rnd >= 50 ? true : false });\r\n        }\r\n        return new Chests(arr, size);\r\n    }\r\n\r\n    isClick(el, px, py, ctx, size, chestDiamond, chestEmpty) {\r\n        const [xMin, xMax, yMin, yMax] = [el.x, el.x + el.width, el.y, el.y + el.height];\r\n        if ((px >= xMin && px <= xMax) && (py >= yMin && py <= yMax) && el.isDraw === true) {\r\n            if (el.isClick === true) {\r\n                return true;\r\n            }\r\n            el.isClick = true; \r\n            ctx.clearRect(el.x, el.y, el.width, el.height);\r\n            el.isGold ? ctx.drawImage(chestDiamond, el.x, el.y, size, size) : ctx.drawImage(chestEmpty, el.x, el.y, size, size);\r\n        }\r\n        return el;\r\n    }\r\n\r\n\r\n    get toArray(){\r\n        return this.table;\r\n    }\r\n}\r\n\r\n// export default DefinedChests;","export class Chests{\r\n    constructor(table, size){\r\n        this.len = table.slice().length;\r\n        this.table = table.slice();\r\n        this.size = size;\r\n    }\r\n\r\n    get arrayChests(){\r\n        const table = this.table;\r\n        const size = this.size;\r\n        const arr = new Array();\r\n\r\n        for(let i = 0; i < this.len; i++) {\r\n            const el = table[i];\r\n            arr.push({ x: el.x, y: el.y, isClick: false, height: size, width: size, isGold: false});\r\n        }\r\n        return new Chests(arr, size);\r\n    }\r\n\r\n    isClick(el, px, py, ctx, size, chestDiamond, chestEmpty) {\r\n        const [xMin, xMax, yMin, yMax] = [el.x, el.x + el.width, el.y, el.y + el.height];\r\n        const rnd = Math.random() * 100;\r\n        if ((px >= xMin && px <= xMax) && (py >= yMin && py <= yMax) && el.isDraw === true) {\r\n            if (el.isClick === true) {\r\n                return true;\r\n            } \r\n            \r\n            if (rnd >= 50) {\r\n                el.isGold = true;\r\n            }\r\n\r\n            el.isClick = true;\r\n            ctx.clearRect(el.x, el.y, el.width, el.height);\r\n            el.isGold ? ctx.drawImage(chestDiamond, el.x, el.y, size, size) : ctx.drawImage(chestEmpty, el.x, el.y, size, size);\r\n        }\r\n        return el;\r\n    }\r\n\r\n\r\n    get toArray(){\r\n        return this.table;\r\n    }\r\n}","import flatten from './flatten.js';\r\nimport MicroModal from '../node_modules/micromodal/dist/micromodal.min.js';\r\nimport {Chests as C_def} from './obj/chest_defined.js';\r\nimport {Chests as C_rnd} from './obj/chest_random.js';\r\n\r\n// const MictoModal = null;\r\n/**\r\n * \r\n * @param {int} num is a level of complexity\r\n */\r\nconst table = (num, size) => {\r\n    num = new Number(num) + 1;\r\n    const arr = new Array();\r\n    let temp_arr = new Array();\r\n\r\n    for (let i = 1; i < num; i++) {\r\n        for (let j = 1; j < num; j++) {\r\n            temp_arr.push({ x: j * (size + 10), y: i * (size + 10), size: size });\r\n        }\r\n        arr.push(temp_arr);\r\n        temp_arr = [];\r\n    }\r\n\r\n    return flatten(arr);\r\n};\r\n\r\nconst drawTable = (ctx, table, size) => {\r\n    ctx.strokeStyle = 'black';\r\n    ctx.lineWidth = 1;\r\n    for (let i = 0; i < table.length; i++) {\r\n        const el = table[i];\r\n        ctx.strokeRect(el.x, el.y, size, size);\r\n    }\r\n};\r\n\r\nexport const setImg = (src) => {\r\n    const img = new Image();\r\n    img.src = src;\r\n    return img;\r\n};\r\n\r\n/**\r\n * \r\n * @param {string} cnvId is id of canvas\r\n * @param {array:objects} table is array of objects\r\n * @param {function} fn is get a `game`\r\n */\r\nconst drawCanvas = (cnvId, table, fn, size, gameMode) => {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.setAttribute('id', cnvId);\r\n    canvas.setAttribute('width', 960);\r\n    canvas.setAttribute('height', 960);\r\n    const body = document.querySelector('#body');\r\n    body.appendChild(canvas);\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    drawTable(ctx, table, size);\r\n    const Entry = gameMode === 'def' ? new C_def(table, size) : new C_rnd(table, size);\r\n    const ArrayOfChests = Entry.arrayChests.table;\r\n    \r\n    return fn(canvas, ctx, table, 2, size, table.length, gameMode, ArrayOfChests, Entry);\r\n};\r\n\r\n/**\r\n * \r\n * @param {array} table is array of objects\r\n * @param {int} end last value\r\n * @param {array} arr is array of uniq table\r\n */\r\nconst shuffle = (a) => {\r\n    for (let i = a.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [a[i], a[j]] = [a[j], a[i]];\r\n    }\r\n    return a;\r\n};\r\n\r\nexport const drawChests = (ctx, arr, img, size, iter, notClick) => {\r\n    const arrayDrawen = new Array();\r\n    const arrayNotDrawen = new Array();\r\n    arr.reduce((acc, el) => {\r\n        el.isDraw === true ? arrayDrawen.push(el) : arrayNotDrawen.push(el);\r\n    }, null);\r\n\r\n    if (notClick === true) {\r\n        arrayDrawen.forEach(e => {\r\n            ctx.drawImage(img, e.x, e.y, size, size);\r\n        });\r\n        return arr;\r\n    }\r\n\r\n    const elems = shuffle(arrayNotDrawen);\r\n\r\n    arrayDrawen.forEach(e => {\r\n        ctx.drawImage(img, e.x, e.y, size, size);\r\n    });\r\n\r\n    if (iter === arr.length) {\r\n        return arr;\r\n    }\r\n\r\n    if (iter === 0) {\r\n        const e = elems[1];\r\n        e.isDraw = true;\r\n        ctx.drawImage(img, e.x, e.y, e.width, e.height);\r\n    }\r\n    const e1 = elems[0];\r\n    e1.isDraw = true;\r\n    ctx.drawImage(img, e1.x, e1.y, e1.width, e1.height);\r\n    arr = arrayDrawen.concat(arrayNotDrawen);\r\n    return arr;\r\n};\r\n\r\nexport const clickChest = (ev, arr, cnv, ctx, size, chestEmpty, chestDiamond, ob, score) => {\r\n    const x = ev.pageX - cnv.offsetLeft;\r\n    const y = ev.pageY - cnv.offsetTop;\r\n    \r\n    for (let i = 0; i < arr.length; i++) {\r\n        const el = ob.isClick(arr[i], x, y, ctx, size, chestDiamond, chestEmpty);\r\n        if (arr.filter(e => x >= e.x && x <= e.x + e.width && y >= e.y && y <= e.y + e.height && e.isDraw === true).length === 0) {\r\n            return false;\r\n        }\r\n\r\n        const scoreArea = document.querySelector('#score');\r\n        scoreArea.innerHTML = score;\r\n\r\n        if (el === true) {\r\n            gameEnd(score);\r\n        }\r\n        if(arr.every(x => x.isClick === true)) {\r\n            gameWin(score);\r\n        }        \r\n    }\r\n};\r\n\r\nexport const clearChest = (ctx, arr) => {\r\n    arr.forEach((el) => {\r\n        ctx.clearRect(el.x, el.y, el.width, el.height);\r\n    });\r\n};\r\n\r\n\r\n// TODO: Modal Area\r\nconst modal = (score, text) => {\r\n    MicroModal.init();\r\n    MicroModal.show('modal-1');\r\n    const title = document.querySelector('.modal__title');\r\n    title.innerHTML = text;\r\n    const el = document.querySelector('.modal__p');\r\n    el.innerHTML = `Ваш счёт: ${score}`;\r\n\r\n    const btn = document.querySelector('.modal__btn');\r\n    btn.addEventListener('click', () => location.reload());\r\n};\r\n\r\nconst gameEnd = (score) => {\r\n    modal(score, 'Очень жаль');\r\n};\r\n\r\nconst gameWin = (score) => {\r\n    modal(score, 'Поздравляем');\r\n};\r\n\r\nexport { table, drawCanvas };","import disableButtons from './src/disableButtons.js';\nimport { table, drawCanvas, drawChests, clickChest, clearChest, setImg } from './src/gameEnigne.js';\n/**\n * \n * @param {string} cnv is id of canvas\n * @param {array:objects} table is array of objects. ex: {x, y, width, height, isCLick}\n * @param {int} start ???\n * @param {int} finish is the next element \n * @param {int} size is a size of image, blocks\n * @param {array:objects} arrayOfImg is a uniq array of table\n */\n\nconst game = (cnv, ctx, table, finish = 3, size, len, gameMode, ArrayOfChests, gameFunctions, iter = 0, notClick = false, score = 1) => {\n    const chest = setImg('images/chest-close.png');\n    const chestEmpty = setImg('images/chest-empty.png');\n    const chestDiamond = setImg('images/chest-ok.png');\n\n    \n    const arrayOfImages = ArrayOfChests;\n    chest.onload = () => {\n        drawChests(ctx, arrayOfImages, chest, size, iter, notClick);\n    };\n\n    cnv.addEventListener('click', (e) => {\n        const click = clickChest(e, arrayOfImages, cnv, ctx, size, chestEmpty, chestDiamond, gameFunctions, score);\n\n        setTimeout(() => {\n            clearChest(ctx, arrayOfImages);\n        }, 400);\n\n        iter = click === false ? iter : iter !== len ? iter + 1 : iter;\n        score = click === false ? score : score + 1;\n        setTimeout(() => {\n            game(cnv, ctx, table, finish, size, len,gameMode, arrayOfImages, gameFunctions, iter, click === false ? true : false, score);\n        }, 500);\n\n    }, { once: true });\n};\n\n/**\n * \n * @param {string} cnvId is id of canvas\n */\nconst main = (cnvId, size) => {\n    const compl = document.querySelectorAll('button');\n    compl.forEach((el) => {\n        el.addEventListener('click', () => {\n            const mode = document.querySelector('#check');\n            const gameMode = mode.checked === true ? 'def' : 'undef';\n            const tbl = table(el.dataset.compl, size);\n            disableButtons(compl);\n            drawCanvas(cnvId, tbl, game, size, gameMode);\n        });\n    });\n};\n\nmain('#cnv', 80);"]}