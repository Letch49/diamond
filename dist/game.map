{"version":3,"sources":["src/functions.js","node_modules/micromodal/dist/micromodal.min.js","src/obj/chest_defined.js","src/obj/chest_random.js","src/gameEnigne.js","game.js"],"names":["onloadImg","img","fn","onload","flatten","array","reduce","acc","el","Array","isArray","forEach","element","push","disableButtons","elements","disabled","shuffle","a","i","length","j","Math","floor","random","setImg","src","Image","table","num","size","Number","arr","temp_arr","x","y","drawTable","ctx","strokeStyle","lineWidth","strokeRect","Chests","len","slice","px","py","chestDiamond","chestEmpty","width","height","isDraw","isClick","clearRect","isGold","drawImage","rnd","xMin","xMax","yMin","yMax","drawCanvas","cnvId","gameMode","canvas","document","createElement","setAttribute","querySelector","appendChild","getContext","Entry","C_def","C_rnd","ArrayOfChests","arrayChests","drawChests","iter","notClick","arrayDrawen","arrayNotDrawen","e","elems","e1","concat","clickChest","ev","cnv","ob","score","pageX","offsetLeft","pageY","offsetTop","filter","querySelectorAll","dom","innerHTML","gameEnd","every","gameWin","clearChest","modal","text","init","show","addEventListener","location","reload","game","finish","gameFunctions","chest","arrayOfImages","click","setTimeout","once","main","compl","mode","checked","tbl","dataset","style","display"],"mappings":"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","file":"game.map","sourceRoot":"..","sourcesContent":["export const onloadImg = (img, fn) => {\r\n    img.onload = () => fn;\r\n};\r\n\r\n/**\r\n * \r\n * @param {arrat} array to flat\r\n */\r\nexport const flatten = (array) => array.reduce((acc, el) => {\r\n    if (Array.isArray(el)){\r\n        flatten(el).forEach(element => {\r\n            acc.push(element);\r\n        });\r\n        return acc;\r\n    }\r\n    return [...acc, el];\r\n},[]);\r\n\r\n/**\r\n * \r\n * @param {array} elements disable buttons\r\n */\r\nexport const disableButtons = (elements) => {\r\n    elements.forEach((el) => {\r\n        el.disabled = true;\r\n    });\r\n};\r\n\r\n/**\r\n * \r\n * @param {array} a \r\n * @return array with random elements\r\n */\r\nexport const shuffle = (a) => {\r\n    for (let i = a.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [a[i], a[j]] = [a[j], a[i]];\r\n    }\r\n    return a;\r\n};\r\n\r\n/**\r\n * \r\n * @param {string} src path to image\r\n */\r\nexport const setImg = (src) => {\r\n    const img = new Image();\r\n    img.src = src;\r\n    return img;\r\n};\r\n\r\n\r\n/**\r\n * \r\n * @param {int} num number of rows\r\n * @param {int} size px of image and one row\r\n */\r\nexport const table = (num, size) => {\r\n    num = new Number(num) + 1;\r\n    const arr = new Array();\r\n    let temp_arr = new Array();\r\n\r\n    for (let i = 1; i < num; i++) {\r\n        for (let j = 1; j < num; j++) {\r\n            temp_arr.push({ x: j * (size + 10), y: i * (size + 10), size: size });\r\n        }\r\n        arr.push(temp_arr);\r\n        temp_arr = [];\r\n    }\r\n\r\n    return flatten(arr);\r\n};\r\n\r\n/**\r\n * \r\n * @param {object} ctx context of canvas\r\n * @param {array} table array of rows\r\n * @param {int} size px of image and one row\r\n */\r\nexport const drawTable = (ctx, table, size) => {\r\n    ctx.strokeStyle = 'black';\r\n    ctx.lineWidth = 1;\r\n    for (let i = 0; i < table.length; i++) {\r\n        const el = table[i];\r\n        ctx.strokeRect(el.x, el.y, size, size);\r\n    }\r\n};","!function(e,o){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=o():\"function\"==typeof define&&define.amd?define(o):e.MicroModal=o()}(this,function(){\"use strict\"\nvar e=function(e,o){if(!(e instanceof o))throw new TypeError(\"Cannot call a class as a function\")},o=function(){function e(e,o){for(var t=0;t<o.length;t++){var i=o[t]\ni.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(o,t,i){return t&&e(o.prototype,t),i&&e(o,i),o}}(),t=function(e){if(Array.isArray(e)){for(var o=0,t=Array(e.length);o<e.length;o++)t[o]=e[o]\nreturn t}return Array.from(e)}\nreturn function(){var i=[\"a[href]\",\"area[href]\",'input:not([disabled]):not([type=\"hidden\"]):not([aria-hidden])',\"select:not([disabled]):not([aria-hidden])\",\"textarea:not([disabled]):not([aria-hidden])\",\"button:not([disabled]):not([aria-hidden])\",\"iframe\",\"object\",\"embed\",\"[contenteditable]\",'[tabindex]:not([tabindex^=\"-\"])'],n=function(){function n(o){var i=o.targetModal,a=o.triggers,r=void 0===a?[]:a,s=o.onShow,l=void 0===s?function(){}:s,c=o.onClose,d=void 0===c?function(){}:c,u=o.openTrigger,f=void 0===u?\"data-micromodal-trigger\":u,h=o.closeTrigger,v=void 0===h?\"data-micromodal-close\":h,g=o.disableScroll,m=void 0!==g&&g,b=o.disableFocus,y=void 0!==b&&b,w=o.awaitCloseAnimation,k=void 0!==w&&w,p=o.debugMode,E=void 0!==p&&p\ne(this,n),this.modal=document.getElementById(i),this.config={debugMode:E,disableScroll:m,openTrigger:f,closeTrigger:v,onShow:l,onClose:d,awaitCloseAnimation:k,disableFocus:y},r.length>0&&this.registerTriggers.apply(this,t(r)),this.onClick=this.onClick.bind(this),this.onKeydown=this.onKeydown.bind(this)}return o(n,[{key:\"registerTriggers\",value:function(){for(var e=this,o=arguments.length,t=Array(o),i=0;i<o;i++)t[i]=arguments[i]\nt.forEach(function(o){o.addEventListener(\"click\",function(){return e.showModal()})})}},{key:\"showModal\",value:function(){this.activeElement=document.activeElement,this.modal.setAttribute(\"aria-hidden\",\"false\"),this.modal.classList.add(\"is-open\"),this.setFocusToFirstNode(),this.scrollBehaviour(\"disable\"),this.addEventListeners(),this.config.onShow(this.modal)}},{key:\"closeModal\",value:function(){var e=this.modal\nthis.modal.setAttribute(\"aria-hidden\",\"true\"),this.removeEventListeners(),this.scrollBehaviour(\"enable\"),this.activeElement.focus(),this.config.onClose(this.modal),this.config.awaitCloseAnimation?this.modal.addEventListener(\"animationend\",function o(){e.classList.remove(\"is-open\"),e.removeEventListener(\"animationend\",o,!1)},!1):e.classList.remove(\"is-open\")}},{key:\"scrollBehaviour\",value:function(e){if(this.config.disableScroll){var o=document.querySelector(\"body\")\nswitch(e){case\"enable\":Object.assign(o.style,{overflow:\"initial\",height:\"initial\"})\nbreak\ncase\"disable\":Object.assign(o.style,{overflow:\"hidden\",height:\"100vh\"})}}}},{key:\"addEventListeners\",value:function(){this.modal.addEventListener(\"touchstart\",this.onClick),this.modal.addEventListener(\"click\",this.onClick),document.addEventListener(\"keydown\",this.onKeydown)}},{key:\"removeEventListeners\",value:function(){this.modal.removeEventListener(\"touchstart\",this.onClick),this.modal.removeEventListener(\"click\",this.onClick),document.removeEventListener(\"keydown\",this.onKeydown)}},{key:\"onClick\",value:function(e){e.target.hasAttribute(this.config.closeTrigger)&&(this.closeModal(),e.preventDefault())}},{key:\"onKeydown\",value:function(e){27===e.keyCode&&this.closeModal(e),9===e.keyCode&&this.maintainFocus(e)}},{key:\"getFocusableNodes\",value:function(){var e=this.modal.querySelectorAll(i)\nreturn Object.keys(e).map(function(o){return e[o]})}},{key:\"setFocusToFirstNode\",value:function(){if(!this.config.disableFocus){var e=this.getFocusableNodes()\ne.length&&e[0].focus()}}},{key:\"maintainFocus\",value:function(e){var o=this.getFocusableNodes()\nif(this.modal.contains(document.activeElement)){var t=o.indexOf(document.activeElement)\ne.shiftKey&&0===t&&(o[o.length-1].focus(),e.preventDefault()),e.shiftKey||t!==o.length-1||(o[0].focus(),e.preventDefault())}else o[0].focus()}}]),n}(),a=null,r=function(e,o){var t=[]\nreturn e.forEach(function(e){var i=e.attributes[o].value\nvoid 0===t[i]&&(t[i]=[]),t[i].push(e)}),t},s=function(e){if(!document.getElementById(e))return console.warn(\"MicroModal v0.3.1: ❗Seems like you have missed %c'\"+e+\"'\",\"background-color: #f8f9fa;color: #50596c;font-weight: bold;\",\"ID somewhere in your code. Refer example below to resolve it.\"),console.warn(\"%cExample:\",\"background-color: #f8f9fa;color: #50596c;font-weight: bold;\",'<div class=\"modal\" id=\"'+e+'\"></div>'),!1},l=function(e){if(e.length<=0)return console.warn(\"MicroModal v0.3.1: ❗Please specify at least one %c'micromodal-trigger'\",\"background-color: #f8f9fa;color: #50596c;font-weight: bold;\",\"data attribute.\"),console.warn(\"%cExample:\",\"background-color: #f8f9fa;color: #50596c;font-weight: bold;\",'<a href=\"#\" data-micromodal-trigger=\"my-modal\"></a>'),!1},c=function(e,o){if(l(e),!o)return!0\nfor(var t in o)s(t)\nreturn!0}\nreturn{init:function(e){var o=Object.assign({},{openTrigger:\"data-micromodal-trigger\"},e),i=[].concat(t(document.querySelectorAll(\"[\"+o.openTrigger+\"]\"))),a=r(i,o.openTrigger)\nif(!0!==o.debugMode||!1!==c(i,a))for(var s in a){var l=a[s]\no.targetModal=s,o.triggers=[].concat(t(l)),new n(o)}},show:function(e,o){var t=o||{}\nt.targetModal=e,!0===t.debugMode&&!1===s(e)||(a=new n(t),a.showModal())},close:function(){a.closeModal()}}}()})\n","export class Chests{\r\n    constructor(table, size){\r\n        this.len = table.slice().length;\r\n        this.table = table.slice();\r\n        this.size = size;\r\n    }\r\n\r\n    get arrayChests(){\r\n        const table = this.table;\r\n        const size = this.size;\r\n        const arr = new Array();\r\n\r\n        for(let i = 0; i < this.len; i++) {\r\n            const rnd = Math.random() * 100;\r\n            const el = table[i];\r\n            arr.push({ x: el.x, y: el.y, isClick: false, height: size, width: size, isGold: rnd >= 50 ? true : false });\r\n        }\r\n        return new Chests(arr, size);\r\n    }\r\n\r\n    isClick(el, px, py, ctx, size, chestDiamond, chestEmpty) {\r\n        const [xMin, xMax, yMin, yMax] = [el.x, el.x + el.width, el.y, el.y + el.height];\r\n        if ((px >= xMin && px <= xMax) && (py >= yMin && py <= yMax) && el.isDraw === true) {\r\n            if (el.isClick === true) {\r\n                return true;\r\n            }\r\n            el.isClick = true; \r\n            ctx.clearRect(el.x, el.y, el.width, el.height);\r\n            el.isGold ? ctx.drawImage(chestDiamond, el.x, el.y, size, size) : ctx.drawImage(chestEmpty, el.x, el.y, size, size);\r\n        }\r\n        return el;\r\n    }\r\n\r\n\r\n    get toArray(){\r\n        return this.table;\r\n    }\r\n}\r\n\r\n// export default DefinedChests;","export class Chests{\r\n    constructor(table, size){\r\n        this.len = table.slice().length;\r\n        this.table = table.slice();\r\n        this.size = size;\r\n    }\r\n\r\n    get arrayChests(){\r\n        const table = this.table;\r\n        const size = this.size;\r\n        const arr = new Array();\r\n\r\n        for(let i = 0; i < this.len; i++) {\r\n            const el = table[i];\r\n            arr.push({ x: el.x, y: el.y, isClick: false, height: size, width: size, isGold: false});\r\n        }\r\n        return new Chests(arr, size);\r\n    }\r\n\r\n    isClick(el, px, py, ctx, size, chestDiamond, chestEmpty) {\r\n        const [xMin, xMax, yMin, yMax] = [el.x, el.x + el.width, el.y, el.y + el.height];\r\n        const rnd = Math.random() * 100;\r\n        if ((px >= xMin && px <= xMax) && (py >= yMin && py <= yMax) && el.isDraw === true) {\r\n            if (el.isClick === true) {\r\n                return true;\r\n            } \r\n            \r\n            if (rnd >= 50) {\r\n                el.isGold = true;\r\n                el.isClick = true;\r\n            }\r\n            \r\n            ctx.clearRect(el.x, el.y, el.width, el.height);\r\n            el.isGold ? ctx.drawImage(chestDiamond, el.x, el.y, size, size) : ctx.drawImage(chestEmpty, el.x, el.y, size, size);\r\n        }\r\n        return el;\r\n    }\r\n\r\n\r\n    get toArray(){\r\n        return this.table;\r\n    }\r\n}","import {flatten, shuffle, drawTable} from './functions.js';\r\nimport MicroModal from '../node_modules/micromodal/dist/micromodal.min.js';\r\nimport {Chests as C_def} from './obj/chest_defined.js';\r\nimport {Chests as C_rnd} from './obj/chest_random.js';\r\n\r\n// const MictoModal = null;\r\n\r\n/**\r\n * \r\n * @param {string} cnvId is id of canvas\r\n * @param {array:objects} table is array of objects\r\n * @param {function} fn is get a `game`\r\n * @param {int} size px of image and one row\r\n * @param {class} gameMode selected class\r\n */\r\nexport const drawCanvas = (cnvId, table, fn, size, gameMode) => {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.setAttribute('id', cnvId);\r\n    canvas.setAttribute('width', 960);\r\n    canvas.setAttribute('height', 960);\r\n    const body = document.querySelector('#body');\r\n    body.appendChild(canvas);\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    drawTable(ctx, table, size);\r\n    const Entry = gameMode === 'def' ? new C_def(table, size) : new C_rnd(table, size);\r\n    const ArrayOfChests = Entry.arrayChests.table;\r\n    \r\n    return fn(canvas, ctx, table, 2, size, table.length, gameMode, ArrayOfChests, Entry);\r\n};\r\n\r\n/**\r\n * \r\n * @param {array} table is array of objects\r\n * @param {int} end last value\r\n * @param {array} arr is array of uniq table\r\n */\r\nexport const drawChests = (ctx, arr, img, size, iter, notClick) => {\r\n    const arrayDrawen = new Array();\r\n    const arrayNotDrawen = new Array();\r\n    arr.reduce((acc, el) => {\r\n        el.isDraw === true ? arrayDrawen.push(el) : arrayNotDrawen.push(el);\r\n    }, null);\r\n\r\n    if (notClick === true) {\r\n        arrayDrawen.forEach(e => {\r\n            ctx.drawImage(img, e.x, e.y, size, size);\r\n        });\r\n        return arr;\r\n    }\r\n\r\n    const elems = shuffle(arrayNotDrawen);\r\n\r\n    arrayDrawen.forEach(e => {\r\n        ctx.drawImage(img, e.x, e.y, size, size);\r\n    });\r\n\r\n    if (iter === arr.length) {\r\n        return arr;\r\n    }\r\n\r\n    if (iter === 0) {\r\n        const e = elems[1];\r\n        e.isDraw = true;\r\n        ctx.drawImage(img, e.x, e.y, e.width, e.height);\r\n    }\r\n    const e1 = elems[0];\r\n    e1.isDraw = true;\r\n    ctx.drawImage(img, e1.x, e1.y, e1.width, e1.height);\r\n    arr = arrayDrawen.concat(arrayNotDrawen);\r\n    return arr;\r\n};\r\n\r\n/**\r\n * @returns return false if click not to chest;\r\n * @todo return gameWin and gameEnd\r\n */\r\nexport const clickChest = (ev, arr, cnv, ctx, size, chestEmpty, chestDiamond, ob, score) => {\r\n    const x = ev.pageX - cnv.offsetLeft;\r\n    const y = ev.pageY - cnv.offsetTop;\r\n    \r\n    for (let i = 0; i < arr.length; i++) {\r\n        const el = ob.isClick(arr[i], x, y, ctx, size, chestDiamond, chestEmpty);\r\n        if (arr.filter(e => x >= e.x && x <= e.x + e.width && y >= e.y && y <= e.y + e.height && e.isDraw === true).length === 0) {\r\n            return false;\r\n        }\r\n\r\n        const scoreArea = document.querySelectorAll('.score');\r\n        scoreArea.forEach(dom => dom.innerHTML = `Клики: ${score}`);\r\n\r\n        if (el === true) {\r\n            gameEnd(score);\r\n        }\r\n        if(arr.every(x => x.isClick === true)) {\r\n            gameWin(score);\r\n        }        \r\n    }\r\n};\r\n\r\n/**\r\n * \r\n * @param {object} ctx context of canvas\r\n * @param {array} arr array of chests\r\n */\r\nexport const clearChest = (ctx, arr) => {\r\n    arr.forEach((el) => {\r\n        ctx.clearRect(el.x, el.y, el.width, el.height);\r\n    });\r\n};\r\n\r\n\r\n// TODO: Modal Area\r\nconst modal = (score, text) => {\r\n    MicroModal.init();\r\n    MicroModal.show('modal-1');\r\n    const title = document.querySelector('.modal__title');\r\n    title.innerHTML = text;\r\n    const el = document.querySelector('.modal__p');\r\n    el.innerHTML = `Ваш счёт: ${score}`;\r\n\r\n    const btn = document.querySelector('.modal__btn');\r\n    btn.addEventListener('click', () => location.reload());\r\n};\r\n\r\nconst gameEnd = (score) => {\r\n    modal(score, 'Очень жаль');\r\n};\r\n\r\nconst gameWin = (score) => {\r\n    modal(score, 'Поздравляем');\r\n};","import { disableButtons, setImg, table } from './src/functions.js';\nimport { drawCanvas, drawChests, clickChest, clearChest } from './src/gameEnigne.js';\n\n/**\n * \n * @param {object} cnv canvas\n * @param {object} ctx canvas context\n * @param {array} table table\n * @param {???} finish not use in this ver\n * @param {int} size px of image and one row\n * @param {int} len length of table\n * @param {string} gameMode which class you selected\n * @param {array} ArrayOfChests array of chests\n * @param {class} gameFunctions selected class\n * @param {iterator} iter iterator of iterative process\n * @param {bool} notClick if not click to chest\n * @param {int} score counter of clicks\n */\nconst game = (cnv, ctx, table, finish = 3, size, len, gameMode, ArrayOfChests, gameFunctions, iter = 0, notClick = false, score = 1) => {\n    const chest = setImg('images/chest-close.png');\n    const chestEmpty = setImg('images/chest-empty.png');\n    const chestDiamond = setImg('images/chest-ok.png');\n\n    \n    const arrayOfImages = ArrayOfChests;\n    chest.onload = () => {\n        drawChests(ctx, arrayOfImages, chest, size, iter, notClick);\n    };\n\n    cnv.addEventListener('click', (e) => {\n        const click = clickChest(e, arrayOfImages, cnv, ctx, size, chestEmpty, chestDiamond, gameFunctions, score);\n\n        setTimeout(() => {\n            clearChest(ctx, arrayOfImages);\n        }, 400);\n\n        iter = click === false ? iter : iter !== len ? iter + 1 : iter;\n        score = click === false ? score : score + 1;\n        setTimeout(() => {\n            game(cnv, ctx, table, finish, size, len,gameMode, arrayOfImages, gameFunctions, iter, click === false ? true : false, score);\n        }, 500);\n\n    }, { once: true });\n};\n\n/**\n * \n * @param {string} cnvId is id of canvas\n * @param {int} size px of image and one row\n * \n */\nconst main = (cnvId, size) => {\n    const compl = document.querySelectorAll('button');\n    compl.forEach((el) => {\n        el.addEventListener('click', () => {\n            const mode = document.querySelector('#check');\n            const gameMode = mode.checked === true ? 'def' : 'undef';\n            const tbl = table(el.dataset.compl, size);\n            disableButtons(compl);\n            document.querySelector('.header').style.display = 'none';\n            drawCanvas(cnvId, tbl, game, size, gameMode);\n        });\n    });\n};\n\nmain('#cnv', 80);"]}